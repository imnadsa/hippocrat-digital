"use client"

import { useState, useEffect, useRef } from "react"
import { 
  Search, 
  Target, 
  Rocket, 
  BarChart3,
  Phone,
  FileText,
  Settings,
  TrendingUp,
  CheckCircle,
  ArrowRight
} from "lucide-react"

export default function ServicesProcess() {
  const [inView, setInView] = useState(false)
  const [activeStep, setActiveStep] = useState(0)
  const sectionRef = useRef(null)

  useEffect(() => {
    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.isIntersecting) {
          setInView(true)
          startStepAnimation()
        }
      },
      { threshold: 0.2 }
    )

    if (sectionRef.current) {
      observer.observe(sectionRef.current)
    }

    return () => {
        if(sectionRef.current) {
            observer.unobserve(sectionRef.current)
        }
    }
  }, [])

  const startStepAnimation = () => {
    const interval = setInterval(() => {
      setActiveStep((prev) => {
        if (prev >= steps.length - 1) {
          clearInterval(interval)
          return prev
        }
        return prev + 1
      })
    }, 1000)
  }

  const steps = [
    {
      icon: Phone,
      title: "–ü–µ—Ä–≤–∏—á–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è",
      description: "–û–±—Å—É–∂–¥–∞–µ–º –≤–∞—à–∏ —Ü–µ–ª–∏, –∏–∑—É—á–∞–µ–º —Å–ø–µ—Ü–∏—Ñ–∏–∫—É –∫–ª–∏–Ω–∏–∫–∏ –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏",
      details: [
        "–ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—É—â–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏",
        "–ü–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–µ–ª–µ–π –∏ KPI",
        "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞",
        "–í—ã–±–æ—Ä –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Ä–∞–±–æ—Ç—ã"
      ],
      color: "teal"
    },
    {
      icon: Search,
      title: "–ê—É–¥–∏—Ç –∏ –∞–Ω–∞–ª–∏–∑",
      description: "–ü—Ä–æ–≤–æ–¥–∏–º –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤–∞—à–µ–≥–æ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è –≤ digital-—Å—Ä–µ–¥–µ",
      details: [
        "–ê—É–¥–∏—Ç —Å–∞–π—Ç–∞ –∏ —Å–æ—Ü—Å–µ—Ç–µ–π",
        "–ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤",
        "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –¶–ê",
        "SEO –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–∞"
      ],
      color: "indigo"
    },
    {
      icon: Target,
      title: "–°—Ç—Ä–∞—Ç–µ–≥–∏—è –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ",
      description: "–†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤–∞—à–∏—Ö —Ü–µ–ª–µ–π",
      details: [
        "–°–æ–∑–¥–∞–Ω–∏–µ digital-—Å—Ç—Ä–∞—Ç–µ–≥–∏–∏",
        "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–π",
        "–ö–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω",
        "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ"
      ],
      color: "teal"
    },
    {
      icon: Settings,
      title: "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ",
      description: "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≤—Å–µ —Å–∏—Å—Ç–µ–º—ã –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Ä–µ–∫–ª–∞–º–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏",
      details: [
        "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∫–∞–±–∏–Ω–µ—Ç–æ–≤",
        "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏",
        "–°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–µ–∞—Ç–∏–≤–æ–≤",
        "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫"
      ],
      color: "indigo"
    },
    {
      icon: Rocket,
      title: "–ó–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞",
      description: "–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ä—Ç –≤—Å–µ—Ö –∫–∞–º–ø–∞–Ω–∏–π –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–µ—Ä–≤—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤",
      details: [
        "–ü–æ–ª–Ω—ã–π –∑–∞–ø—É—Å–∫ –∫–∞–º–ø–∞–Ω–∏–π",
        "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π",
        "–ü–µ—Ä–≤–∏—á–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è",
        "–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å"
      ],
      color: "teal"
    },
    {
      icon: BarChart3,
      title: "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ",
      description: "–ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –Ω–∞–¥ —É–ª—É—á—à–µ–Ω–∏–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ–º KPI",
      details: [
        "A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ",
        "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∫–∞–º–ø–∞–Ω–∏–π",
        "–ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ",
        "–†–µ–≥—É–ª—è—Ä–Ω–∞—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å"
      ],
      color: "indigo"
    }
  ]

  const methodologies = [
    {
      title: "Agile –ø–æ–¥—Ö–æ–¥",
      description: "–ë—ã—Å—Ç—Ä–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º",
      icon: "üîÑ"
    },
    {
      title: "Data-driven —Ä–µ—à–µ–Ω–∏—è",
      description: "–í—Å–µ —Ä–µ—à–µ–Ω–∏—è –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ –¥–∞–Ω–Ω—ã—Ö",
      icon: "üìä"
    },
    {
      title: "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–∞",
      description: "–ó–Ω–∞–Ω–∏–µ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∏ –æ—Ç—Ä–∞—Å–ª–∏",
      icon: "üè•"
    },
    {
      title: "–ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å",
      description: "–î–µ—Ç–∞–ª—å–Ω–∞—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å",
      icon: "üìà"
    }
  ]

  return (
    <section ref={sectionRef} id="services-process" className="bg-slate-900 py-16 md:py-20 relative overflow-hidden">
      {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
      <div className="absolute top-0 right-0 w-40 h-40 bg-teal-500/10 rounded-full blur-3xl animate-floatBackground"></div>
      <div className="absolute bottom-0 left-0 w-60 h-60 bg-indigo-500/10 rounded-full blur-3xl animate-floatBackground" style={{ animationDelay: '-3s' }}></div>

      <div className="container mx-auto px-4 relative z-10">
        <div className={`text-center mb-12 ${inView ? 'animate-fadeInUp' : 'opacity-0'}`}>
          <div className="inline-block px-4 py-1 rounded-full bg-teal-900/30 border border-teal-700/30 text-teal-400 text-sm mb-6">
            –ö–∞–∫ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º
          </div>
          <h2 className="text-2xl md:text-4xl font-bold mb-4 font-fixedsys">
            –ü—Ä–æ—Ü–µ—Å—Å{" "}
            <span className="bg-gradient-to-r from-teal-400 to-indigo-500 bg-clip-text text-transparent">
              —Ä–∞–±–æ—Ç—ã —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏
            </span>
          </h2>
          <p className="text-slate-400 text-center max-w-2xl mx-auto">
            –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –∫–∞–∂–¥–æ–º—É –ø—Ä–æ–µ–∫—Ç—É –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ü–µ–ª–µ–π 
            –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤–ª–æ–∂–µ–Ω–∏–π
          </p>
        </div>

        {/* Timeline */}
        <div className="relative max-w-5xl mx-auto mb-16">
          {/* Connecting line */}
          <div className="hidden lg:block absolute top-16 left-0 right-0 h-0.5 bg-gradient-to-r from-teal-400 via-indigo-500 to-teal-400 opacity-30"></div>
          
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
            {steps.map((step, index) => {
              const IconComponent = step.icon
              const isActive = activeStep >= index
              const isPast = activeStep > index
              
              return (
                <div 
                  key={index}
                  className={`relative transition-all duration-700 ${
                    inView ? 'animate-slideInStagger opacity-100' : 'opacity-0 translate-y-8'
                  }`}
                  style={{ animationDelay: `${index * 200 + 300}ms` }}
                >
                  {/* Step number and icon */}
                  <div className="flex flex-col items-center mb-6">
                    <div className={`relative w-16 h-16 rounded-full border-2 flex items-center justify-center transition-all duration-500 ${
                      isActive 
                        ? `bg-${step.color}-500 border-${step.color}-500 text-white shadow-lg shadow-${step.color}-500/30 scale-110`
                        : 'bg-slate-800 border-slate-700 text-slate-400'
                    }`}>
                      {isPast ? (
                        <span className="font-fixedsys font-bold text-2xl">{index + 1}</span>
                      ) : (
                        <IconComponent size={24} />
                      )}
                      
                      {/* Step number in corner */}
                      <div className={`absolute -top-3 -right-3 w-8 h-8 rounded-full text-xs font-bold font-fixedsys flex items-center justify-center transition-all duration-500 ${
                        isActive 
                          ? `bg-${step.color}-600 text-white`
                          : 'bg-slate-700 text-slate-400'
                      }`}>
                        {index + 1}
                      </div>
                    </div>
                  </div>

                  {/* Content */}
                  <div className={`bg-slate-800/20 rounded-xl border p-6 transition-all duration-500 ${
                    isActive 
                      ? `border-${step.color}-500/30 shadow-lg shadow-${step.color}-900/10`
                      : 'border-slate-700/30'
                  }`}>
                    <div className="text-center mb-4">
                      <h3 className={`text-lg font-bold font-fixedsys mb-2 transition-colors duration-300 ${
                        isActive ? `text-${step.color}-400` : 'text-white'
                      }`}>
                        {step.title}
                      </h3>
                    </div>
                    
                    <p className="text-slate-300 text-sm mb-4 text-center">
                      {step.description}
                    </p>

                    {/* Details for active step */}
                    {isActive && (
                      <div className="animate-fadeIn border-t border-slate-700/50 pt-4">
                        <ul className="space-y-2">
                          {step.details.map((detail, detailIndex) => (
                            <li 
                              key={detailIndex} 
                              className="flex items-start text-xs text-slate-400"
                              style={{ animationDelay: `${detailIndex * 100}ms` }}
                            >
                              <span className={`w-1.5 h-1.5 rounded-full mr-3 mt-1.5 bg-${step.color}-400`}></span>
                              {detail}
                            </li>
                          ))}
                        </ul>
                      </div>
                    )}
                  </div>
                </div>
              )
            })}
          </div>
        </div>

        {/* Methodologies */}
        <div className={`${inView ? 'animate-fadeInUp delay-1000' : 'opacity-0'}`}>
          <h3 className="text-2xl font-bold font-fixedsys text-white text-center mb-8">
            –ù–∞—à–∏ –ø—Ä–∏–Ω—Ü–∏–ø—ã —Ä–∞–±–æ—Ç—ã
          </h3>
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 mb-12">
            {methodologies.map((method, index) => (
              <div 
                key={index}
                className="bg-slate-800/20 rounded-xl border border-slate-700/30 p-6 text-center hover-lift transition-all group"
              >
                <div className="text-3xl mb-4 group-hover:animate-iconBounce">
                  {method.icon}
                </div>
                <h4 className="font-semibold text-white mb-2 font-fixedsys">
                  {method.title}
                </h4>
                <p className="text-slate-400 text-sm">
                  {method.description}
                </p>
              </div>
            ))}
          </div>
        </div>

        {/* Timeline summary */}
        <div className={`bg-gradient-to-r from-teal-900/20 to-indigo-900/20 rounded-xl border border-teal-500/30 p-8 text-center ${inView ? 'animate-fadeIn delay-1200' : 'opacity-0'}`}>
          <h3 className="text-xl font-bold font-fixedsys text-white mb-4">
            –†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç—ã
          </h3>
          <p className="text-slate-400 mb-6 max-w-3xl mx-auto">
            –ì–æ—Ç–æ–≤–∞—è digital-—ç–∫–æ—Å–∏—Å—Ç–µ–º–∞ –¥–ª—è –≤–∞—à–µ–π –∫–ª–∏–Ω–∏–∫–∏: –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Ä–µ–∫–ª–∞–º–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏, 
            –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–∞–π—Ç, –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ –∏ –∏–∑–º–µ—Ä–∏–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —É–∂–µ —á–µ—Ä–µ–∑ –º–µ—Å—è—Ü
          </p>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            <div className="text-center">
              <div className="text-2xl font-bold font-fixedsys text-teal-400 mb-1">2-4 –Ω–µ–¥–µ–ª–∏</div>
              <div className="text-slate-400 text-sm">–î–æ –ø–µ—Ä–≤—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold font-fixedsys text-indigo-400 mb-1">24/7</div>
              <div className="text-slate-400 text-sm">–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–∞–º–ø–∞–Ω–∏–π</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold font-fixedsys text-teal-400 mb-1">300%</div>
              <div className="text-slate-400 text-sm">–°—Ä–µ–¥–Ω–∏–π ROI</div>
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}
