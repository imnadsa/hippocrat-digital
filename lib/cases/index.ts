import { CaseData } from '@/lib/types/case'
import { onlineOkoCase } from './online-oko'
import { hippocratAiCase } from './hippocrat-ai'
import { yasnyVzorCase } from './yasny-vzor'// üëà –î–æ–±–∞–≤–∏–ª –∏–º–ø–æ—Ä—Ç
import { polniyPoryadokCase } from './polniy-poryadok'

// –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –∫–µ–π—Å—ã
export const allCases: CaseData[] = [
  onlineOkoCase,
  hippocratAiCase,  // üëà –î–æ–±–∞–≤–∏–ª –≤ –º–∞—Å—Å–∏–≤
  yasnyVzorCase,
  polniyPoryadokCase,
  // aiMedicalCase,
]

// –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –ø–æ slug
export const casesData: Record<string, CaseData> = allCases.reduce((acc, caseData) => {
  acc[caseData.id] = caseData
  return acc
}, {} as Record<string, CaseData>)

// –£—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
export const getCaseBySlug = (slug: string): CaseData | null => {
  return casesData[slug] || null
}

export const getAllCaseSlugs = (): string[] => {
  return Object.keys(casesData)
}

export const getCasesCount = (): number => {
  return allCases.length
}

// –ü–æ–ª—É—á–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–π/–ø—Ä–µ–¥—ã–¥—É—â–∏–π –∫–µ–π—Å –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
export const getAdjacentCases = (currentSlug: string) => {
  const slugs = getAllCaseSlugs()
  const currentIndex = slugs.indexOf(currentSlug)
  
  return {
    prev: currentIndex > 0 ? slugs[currentIndex - 1] : null,
    next: currentIndex < slugs.length - 1 ? slugs[currentIndex + 1] : null
  }
}
